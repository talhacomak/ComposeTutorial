plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("com.google.devtools.ksp")
}

android {
    namespace 'com.example.composetutorial'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.composetutorial"
        minSdk 29
        //noinspection ExpiredTargetSdkVersion
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    aaptOptions {
        cruncherEnabled = false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.14"
    }
}

dependencies {
    def composeBom = platform('androidx.compose:compose-bom:2024.05.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    // or Material Design 2
    // implementation 'androidx.compose.material:material'
    // or skip Material Design and build directly on top of foundational components
    // implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    // implementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // Test
    testImplementation "junit:junit:4.13.2"
    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.9.0'
    // Optional - Integration with ViewModels
    // implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    // Optional - Integration with LiveData
    // implementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with RxJava
    // implementation 'androidx.compose.runtime:runtime-rxjava2'

    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"


    // implementation "com.google.devtools.ksp:symbol-processing-api:1.9.24-1.0.20"
    // ksp "com.google.devtools.ksp:symbol-processing:1.9.24-1.0.20"
}